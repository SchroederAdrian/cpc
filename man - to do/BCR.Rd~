\name{BCR}
\alias{BCR}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{Bootstrap confidence regions (BCR) method
%%  ~~function to do ... ~~
}
\description{
%%  ~~ A concise (1-5 lines) description of what the function does. ~~
Identifies the number of common eigenvectors in several groups using the bootstrap confidence regions (BCR) method.
}
\usage{
BCR(origdata, reps = 1000)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{origdata}{
%%     ~~Describe \code{origdata} here~~
List of the sample data sets.
}
  \item{reps}{
%%     ~~Describe \code{reps} here~~
Number of bootstrap replications to use.
}
}
\details{
%%  ~~ If necessary, more details than the description above ~~
Calculates 95% bootstrap confidence regions for eigenvector pairs; if regions overlap, the eigenvectors are considered to be common.

Tests the hypothesis:
H_0: the pair of eigenvectors are common
H_1: the pair of eigenvectors are NOT common
}
\value{
%%  ~Describe the value returned
%%  If it is a LIST, use
%%  \item{comp1 }{Description of 'comp1'}
%%  \item{comp2 }{Description of 'comp2'}
%% ...
Returns a data frame with the columns:
\item{Common eigenvector}{Order of the eigenvectors in the model matrix.}
\item{common.ind}{Indicator of eigenvector commonness (1 = common eigenvector).}
}
\references{
%% ~put references to the literature/web site here ~
}
\author{
%%  ~~who you are~~
Theo Pepler
}
\note{
%%  ~~further notes~~
Note that this implementation of the BVD method can handle only two groups of data currently.
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
\code{\link{ensemble.test}}
}
\examples{
##---- Should be DIRECTLY executable !! ----
##-- ==>  Define data, use random,
##--	or do  help(data=index)  for the standard data sets.

## The function is currently defined as
function (origdata, reps = 1000) 
{
    library(foreach)
    library(doMC)
    registerDoMC()
    myFun <- function(x, origvec) {
        return(abs(t(x) \%*\% origvec))
    }
    k <- 2
    p <- ncol(origdata[[1]])
    nvec <- rep(NA, times = k)
    covmats <- array(NA, dim = c(p, p, k))
    E <- array(NA, dim = c(p, p, k))
    for (i in 1:k) {
        nvec[i] <- nrow(origdata[[i]])
        covmats[, , i] <- cov(origdata[[i]])
        E[, , i] <- eigen(covmats[, , i])$vectors
    }
    B <- FG(covmats, nvec)$B
    findcpc.out <- findcpc(covmats, B = B, plotting = FALSE)
    commonvecnums <- findcpc.out$all.correlations[1:p, ]
    for (i in 2:(k + 1)) {
        j <- 2
        while (j <= p) {
            if (length(unique(commonvecnums[1:j, i])) == length(unique(commonvecnums[1:(j - 
                1), i]))) {
                commonvecnums <- commonvecnums[-j, ]
                p <- p - 1
            }
            j <- j + 1
        }
    }
    commonvec.order <- commonvecnums[, "B"]
    eigenvec.order <- commonvecnums[, c("Group1", "Group2")]
    common.ind <- rep(1, times = p)
    bootreps1 <- foreach(r = 1:reps) \%dopar\% eigen(cov(origdata[[1]][sample(c(1:nvec[1]), 
        size = nvec[1], replace = T), ]))$vectors[, eigenvec.order[, 
        1]]
    bootreps2 <- foreach(r = 1:reps) \%dopar\% eigen(cov(origdata[[2]][sample(c(1:nvec[2]), 
        size = nvec[2], replace = T), ]))$vectors[, eigenvec.order[, 
        2]]
    dotprod1 <- foreach(r = 1:reps, .combine = "rbind") \%dopar\% 
        abs(diag(t(E[, , 1][, eigenvec.order[, 1]]) \%*\% bootreps1[[r]]))
    bootreps1.cutoff <- apply(dotprod1, 2, FUN = quantile, probs = 0.05)
    dotprod2 <- foreach(r = 1:reps, .combine = "rbind") \%dopar\% 
        abs(diag(t(E[, , 2][, eigenvec.order[, 2]]) \%*\% bootreps2[[r]]))
    for (j in 1:p) {
        bootreps1.vecs <- foreach(r = 1:reps, .combine = "rbind") \%dopar\% 
            bootreps1[[r]][, j]
        bootreps1.trim <- bootreps1.vecs[dotprod1[, j] > bootreps1.cutoff[j], 
            ]
        temp <- abs(bootreps1.trim \%*\% E[, , 2][, eigenvec.order[j, 
            2]])
        between.dotprod <- max(temp)
        within.dotprod <- quantile(dotprod2[, j], probs = 0.05)
        if (within.dotprod > between.dotprod) {
            common.ind[j] <- 0
        }
    }
    return(data.frame(`Common eigenvector` = commonvec.order, 
        common.ind = common.ind))
  }
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{ ~kwd1 }
\keyword{ ~kwd2 }% __ONLY ONE__ keyword per line

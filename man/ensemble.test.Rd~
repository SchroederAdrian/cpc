\name{ensemble.test}
\alias{ensemble.test}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
%%  ~~function to do ... ~~
Ensemble test for the identification of common eigenvectors
}
\description{
%%  ~~ A concise (1-5 lines) description of what the function does. ~~
Identifies the number of common eigenvectors in several groups using the ensemble test.
}
\usage{
ensemble.test(origdata, standardize = FALSE)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{origdata }{List of the sample data sets.}
  \item{standardize }{Logical, indicating whether the data columns should be standardized (mean=0, stdev=1) before performing the ensemble test (default = FALSE).}
}
\details{
%%  ~~ If necessary, more details than the description above ~~
Ensemble method to identify common eigenvectors in k groups: majority vote on number of common eigenvectors from Flury's AIC, Bootstrap Vector Correlation Distribution (BVD), Bootstrap Confidence Regions (BCR), Random Vector Correlations (RVC) and Bootstrap hypothesis test (BootTest) methods.  
}
\value{
%%  ~Describe the value returned
%%  If it is a LIST, use
%%  \item{comp1 }{Description of 'comp1'}
%%  \item{comp2 }{Description of 'comp2'}
%% ...
Returns a list with the following components:
\item{Results }{Row 1: order of common eigenvectors in B; Row 2-5: results from AIC, BVD, BCR and RVC tests (1 = eigenvector common); Row 6: ensemble test common eigenvector indicator (1 = eigenvector common).}
\item{commonvecs }{Positions of the common eigenvectors in the modal matrix.}
\item{commonvecmat }{The estimated common eigenvectors, extracted from the modal matrix.}
}
\references{
%% ~put references to the literature/web site here ~
Pepler, P.T. (2014). The identification and application of common principal components. PhD dissertation in the Department of Statistics and Actuarial Science, Stellenbosch University.
}
\author{
%%  ~~who you are~~
Theo Pepler
}
\note{
%%  ~~further notes~~
Note that this implementation of the Ensemble test can currently handle only two groups of data.
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
\code{\link{flury.AIC}}, \code{\link{BVD}}, \code{\link{BCR}}, \code{\link{RVC}}, and \code{\link{BootTest}}
}
\examples{
# Determine number of common eigenvectors in the covariance matrices of the 
# versicolor and virginica groups

data(iris)
versicolor <- iris[51:100, 1:4]
virginica <- iris[101:150, 1:4]
ensemble.test(origdata = list(versicolor, virginica))


##---- Should be DIRECTLY executable !! ----
##-- ==>  Define data, use random,
##--	or do  help(data=index)  for the standard data sets.

## The function is currently defined as
function (origdata, standardize = F) 
{
    myFunc <- function(datavec) {
        return((datavec - mean(datavec))/sd(datavec))
    }
    standcol <- function(datamat) {
        return(apply(datamat, 2, myFunc))
    }
    nvec <- c(nrow(origdata[[1]]), nrow(origdata[[2]]))
    p <- ncol(origdata[[1]])
    covmats <- array(NA, dim = c(p, p, 2))
    if (standardize) {
        origdata[[1]] <- standcol(origdata[[1]])
        origdata[[2]] <- standcol(origdata[[2]])
    }
    covmats[, , 1] <- cov(origdata[[1]])
    covmats[, , 2] <- cov(origdata[[2]])
    B <- FG(covmats, nvec)$B
    commonvec.order <- findcpc(covmats, B = B, plotting = F)$commonvec.order
    flury.out <- flury.test(covmats, nvec, B = B, p = dim(covmats)[1], 
        qmax = p - 2, commonvec.order = commonvec.order)
    fluryAIC.vote <- flury.out[which.min(flury.out[, "AIC"]), 
        "No.of.CPCs"]
    fluryAIC.ind <- c(rep(1, times = fluryAIC.vote), rep(0, times = (p - 
        fluryAIC.vote)))
    BVD.out <- BVD(origdata, reps = 1000)
    BVD2c.vote <- sum(BVD.out["BVD 2c", ])
    BVD2c.ind <- BVD.out["BVD 2c", ]
    if (length(BVD2c.ind) < p) {
        BVD2c.ind <- c(BVD2c.ind, rep(0, times = (p - length(BVD2c.ind))))
    }
    BCR.ind <- BCR(origdata, reps = 1000)[, "common.ind"]
    BCR.vote <- sum(BCR.ind)
    if (length(BCR.ind) < p) {
        BCR.ind <- c(BCR.ind, rep(0, times = (p - length(BCR.ind))))
    }
    RVC.out <- RVC(covmats, reps = 1e+05)[, "p.values"]
    RVC.ind <- rep(0, times = p)
    RVC.ind[RVC.out <= 0.05] <- 1
    BootTest.out <- BootTest(origdata)[, "p.values"]
    BootTest.ind <- rep(0, times = p)
    BootTest.ind[BootTest.out > 0.05] <- 1
    resultmat <- rbind(`Common eigenvector` = commonvec.order, 
        `Flury AIC` = fluryAIC.ind, `BVD 2c` = BVD2c.ind, BCR = BCR.ind, 
        RVC = RVC.ind, BootTest = BootTest.ind)
    common.votes <- apply(resultmat[2:6, ], 2, sum)
    commonvecs <- rep(0, times = p)
    commonvecs[common.votes > 2] <- 1
    resultmat <- rbind(resultmat, `Common vectors` = commonvecs)
    commonvecnums <- commonvec.order[commonvecs > 0]
    return(list(Results = resultmat, commonvecs = commonvecnums, 
        commonvecmat = B[, commonvecnums]))
  }
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{ ~kwd1 }
\keyword{ ~kwd2 }% __ONLY ONE__ keyword per line
